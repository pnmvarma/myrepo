<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<flow name="task-no4Flow" doc:id="1e4b5c9d-7e5f-4289-a901-979e7d5e8a21" >
		<scheduler doc:name="Scheduler" doc:id="1add521f-f888-442c-a3eb-00b5bcad248f" >
			<scheduling-strategy >
				<fixed-frequency frequency="10000" startDelay="5" timeUnit="SECONDS"/>
			</scheduling-strategy>
		</scheduler>
		<logger level="INFO" doc:name="Logger" doc:id="e65c0547-e7f3-46b7-ba54-4c5a0f05fb60" message="Task No 4 flow started"/>
		<ee:transform doc:name="Transform Message" doc:id="9c625ba4-2588-48f7-a94f-95c21257a8da" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="input1" ><![CDATA[%dw 2.0
output application/json
---
{ 
   "employee":[ 
      { 
         "id":"A007",
         "first_name":"Jan",
         "last_name":"Doe"
      },
      { 
         "id":"A008",
         "first_name":"Ron",
         "l ast_name":"David"
      },
      { 
         "id":"A009",
         "first_name":"Jane",
         "last_name":"Kane"
      },
      { 
         "id":"A010",
         "first_name":"Marsh",
         "last_name":"Megan"
      },
      { 
         "id":"A011",
         "first_name":"Kelly",
         "last_name":"Mitch"
      },
      { 
         "id":"A012",
         "first_name":"Chris",
         "last_name":"Vaste"
      }
   ]
}]]></ee:set-variable>
				<ee:set-variable variableName="input2" ><![CDATA[%dw 2.0
output application/json
---
{ 
   "scoreBoard":[ 
      { 
         "id":"A007",
         "subjects":[ 
            "Maths",
            "English",
            "Arts",
            "Drawimgs"
         ],
         "score":[ 
            80,
            75,
            89,
            100
         ]
      },
      { 
         "id":"A008",
         "subjects":[ 
            "Maths",
            "English",
            "Arts",
            "Drawimgs"
         ],
         "score":[ 
            70,
            85,
            69,
            90
         ]
      },
      { 
         "id":" A021",
         "subjects":[ 
            "Maths",
            "English",
            "Arts",
            "Drawimgs"
         ],
         "score":[ 
            90,
            87,
            77,
            95
         ]
      }
   ]
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<scatter-gather doc:name="Scatter-Gather" doc:id="3664dca7-4671-40f0-9692-4a13c6a35e2b" >
			<route >
				<ee:transform doc:name="Transform Message" doc:id="ac8e15f8-86a1-4aad-8a2f-ded81cd53063">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
import * from dw::core::Strings
output application/json
---
certificate:(vars.input1.employee map ((input1, indInput1) -> {
	(vars.input2.scoreBoard filter($.id  == input1.id) map((id,indId) -> {
	     "id":input1.id,
         "firstName":input1.first_name,
         "LastName":input1.last_name,
   "MarksBySubjectWise":{
            "Maths":id.score[0],
            "English":id.score[1],
            "Arts":id.score[2],
            "Drawings":id.score[3]
            }
	}))
}))filter($ !={})

]]></ee:set-payload>
			</ee:message>
		</ee:transform>
				<logger level="INFO" doc:name="Logger" doc:id="e9420d26-ea2d-4b27-a0a2-6615914ceeb0" message="Output 4.1 #[payload]" />
			</route>
			<route >
				<ee:transform doc:name="Transform Message" doc:id="6246fcb5-4207-40d3-92de-87b4e16f847d">
			<ee:message>
				<ee:set-payload ><![CDATA[%dw 2.0
import * from dw::core::Strings
output application/json
---
certificate:(vars.input1.employee map ((input1, indInput1) -> {
	     "id":input1.id,
         "firstName":input1.first_name,
         "LastName":input1.last_name,
(vars.input2.scoreBoard filter($.id  == input1.id) map((id,indId) -> {
   "MarksBySubjectWise":{
            "Maths":id.score[0],
            "English":id.score[1],
            "Arts":id.score[2],
            "Drawings":id.score[3]
           
            }
	}))
}))
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
				<logger level="INFO" doc:name="Logger" doc:id="0e169be6-72f1-4bda-8a6f-d4a60d71697b" message="Output 4.2 #[payload]"/>
			</route>
		</scatter-gather>
	</flow>
</mule>
